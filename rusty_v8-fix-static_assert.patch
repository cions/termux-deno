--- a/v8/src/handles/handles.h
+++ b/v8/src/handles/handles.h
@@ -479,18 +479,15 @@ class DirectHandle : public DirectHandleBase {
                                                   : kTaggedNullAddress) {}
 
   V8_INLINE Tagged<T> operator->() const {
-    if constexpr (is_subtype_v<T, HeapObject>) {
-      return **this;
-    } else {
-      // For non-HeapObjects, there's no on-heap object to dereference, so
-      // disallow using operator->.
-      //
-      // If you got an error here and want to access the Tagged<T>, use
-      // operator* -- e.g. for `Tagged<Smi>::value()`, use `(*handle).value()`.
-      static_assert(
-          false,
-          "This handle does not reference a heap object. Use `(*handle).foo`.");
-    }
+    // For non-HeapObjects, there's no on-heap object to dereference, so
+    // disallow using operator->.
+    //
+    // If you got an error here and want to access the Tagged<T>, use
+    // operator* -- e.g. for `Tagged<Smi>::value()`, use `(*handle).value()`.
+    static_assert(
+        is_subtype_v<T, HeapObject>,
+        "This handle does not reference a heap object. Use `(*handle).foo`.");
+    return **this;
   }
 
   V8_INLINE Tagged<T> operator*() const {
